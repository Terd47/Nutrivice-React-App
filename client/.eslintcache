[{"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\index.js":"1","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\App.js":"2","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\landingpage\\LandingPage.js":"3","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\Dashboard\\index.js":"4","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\About\\index.js":"5","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\Discover\\index.js":"6","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Signup\\index.js":"7","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\GetMealData\\index.js":"8","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\DietPref\\index.js":"9","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Profile\\index.js":"10","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\BMI\\index.js":"11","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Signin\\index.js":"12","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\SeeData\\index.js":"13","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Chart\\index.js":"14","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\SeePref\\index.js":"15","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Footer\\index.js":"16","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Jumbotron\\index.js":"17","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\CardItem\\index.js":"18","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Nav\\index.js":"19","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Cards\\index.js":"20","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Featured\\index.js":"21","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\About\\index.js":"22","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Nav2\\index.js":"23","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Dashboard\\index.js":"24","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\MealList\\index.js":"25","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Modal\\index.js":"26","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Button\\index.js":"27","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\lastUpdated\\index.js":"28","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\lastUpdPref\\index.js":"29","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Meal\\index.js":"30","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\RandomMeals\\index.js":"31"},{"size":191,"mtime":1613000075491,"results":"32","hashOfConfig":"33"},{"size":1667,"mtime":1613139948285,"results":"34","hashOfConfig":"33"},{"size":1082,"mtime":1613000075509,"results":"35","hashOfConfig":"33"},{"size":380,"mtime":1613000471294,"results":"36","hashOfConfig":"33"},{"size":375,"mtime":1613001252898,"results":"37","hashOfConfig":"33"},{"size":401,"mtime":1613108934902,"results":"38","hashOfConfig":"33"},{"size":4748,"mtime":1613001938645,"results":"39","hashOfConfig":"33"},{"size":3947,"mtime":1613065914403,"results":"40","hashOfConfig":"33"},{"size":7629,"mtime":1613065914399,"results":"41","hashOfConfig":"33"},{"size":2525,"mtime":1613000075464,"results":"42","hashOfConfig":"33"},{"size":12721,"mtime":1613109486789,"results":"43","hashOfConfig":"33"},{"size":3804,"mtime":1613001985909,"results":"44","hashOfConfig":"33"},{"size":1742,"mtime":1613108707282,"results":"45","hashOfConfig":"33"},{"size":6565,"mtime":1612934732944,"results":"46","hashOfConfig":"33"},{"size":1509,"mtime":1613109191919,"results":"47","hashOfConfig":"33"},{"size":658,"mtime":1612535212464,"results":"48","hashOfConfig":"33"},{"size":596,"mtime":1612935681095,"results":"49","hashOfConfig":"33"},{"size":678,"mtime":1612535212452,"results":"50","hashOfConfig":"33"},{"size":2830,"mtime":1612923240071,"results":"51","hashOfConfig":"33"},{"size":315,"mtime":1612535212454,"results":"52","hashOfConfig":"33"},{"size":2217,"mtime":1613065965760,"results":"53","hashOfConfig":"33"},{"size":1014,"mtime":1613065914392,"results":"54","hashOfConfig":"33"},{"size":2214,"mtime":1612924894250,"results":"55","hashOfConfig":"33"},{"size":5339,"mtime":1613140104416,"results":"56","hashOfConfig":"33"},{"size":837,"mtime":1612535212476,"results":"57","hashOfConfig":"33"},{"size":462,"mtime":1612774410977,"results":"58","hashOfConfig":"33"},{"size":763,"mtime":1612535212449,"results":"59","hashOfConfig":"33"},{"size":1748,"mtime":1613000075487,"results":"60","hashOfConfig":"33"},{"size":1626,"mtime":1613000075481,"results":"61","hashOfConfig":"33"},{"size":1591,"mtime":1613108900747,"results":"62","hashOfConfig":"33"},{"size":2244,"mtime":1613066000156,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8ujawi",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\App.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\landingpage\\LandingPage.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\About\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\pages\\Discover\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Signup\\index.js",["138","139","140","141","142"],"import axios from 'axios';\r\nimport React, { Component} from 'react';\r\nimport './style.css';\r\nimport Nav from './../Nav';\r\nimport Footer from '../Footer';\r\n\r\n\r\nclass  Signup extends Component{\r\n   constructor() {\r\n      super();\r\n      this.state = {\r\n         name: \"\",\r\n         username: \"\",\r\n         email: \"\",\r\n         password: \"\",\r\n         password2: \"\",\r\n         isAuthenticated: false,\r\n         errors: {}\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const userInfo = localStorage.getItem(\"decodedTokenID\");\r\n          if(userInfo) {\r\n              // if token exist, redirect to dashboard\r\n              this.props.history.push(\"/dashboard\");\r\n          }\r\n              console.log(userInfo);\r\n    }\r\n\r\n   onChange = e => {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n   };\r\n\r\n   onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const newUser = {\r\n         name: this.state.name,\r\n         username: this.state.name,\r\n         email: this.state.email,\r\n         password: this.state.password,\r\n         password2: this.state.password2\r\n      };\r\n\r\n\r\n      axios.post('/api/register', newUser)\r\n\r\n         .then(res => {\r\n            console.log(res);\r\n         })\r\n         .then(res =>  this.props.history.push('/dashboard'))\r\n         .catch(err => console.log(err));\r\n         this.props.history.push('/bmi');\r\n\r\n      console.log('out here in submit');\r\n   }\r\n\r\nrender() {\r\n   const { errors } = this.state;\r\n   return (\r\n      <>\r\n      <Nav />\r\n      <div className=\"signup-container\">\r\n             <div className = \"pillar\">\r\n               <h1 className=\"lead brand\">\r\n                  NutriVice\r\n               </h1>\r\n               <div className = \"quote\">\r\n                  <h4 className=\" quotes\"> “Health requires healthy food.”</h4>\r\n                  <h6 className=\" quotes\"> – Roger Williams</h6>      \r\n               </div>\r\n                  {/* <h3 className=\"quotes\"> Famous quote</h3> */}\r\n               \r\n                  {/* user signin form */}\r\n                  <form className=\"signup\" noValidate onSubmit={this.onSubmit}>\r\n                  <div className=\"mb-3\">\r\n                     <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                     <input type=\"text\" className=\"form-control form-group\"  \r\n                     onChange={this.onChange}\r\n                     value={this.state.name}\r\n                     error={errors.name}\r\n                     id=\"name\"\r\n                     type=\"text\"\r\n                     />\r\n                  </div>\r\n               <div className=\"mb-3\">\r\n                  <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n                  <input type=\"tel\" className=\"form-control form-group\"  \r\n                  onChange={this.onChange}\r\n                  value={this.state.username}\r\n                  error={errors.username}\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  />\r\n               </div>\r\n               <div className=\"mb-3\">\r\n                  <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                  <input type=\"email\" className=\"form-control form-group\" \r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  />\r\n               </div>\r\n               <div className=\"mb-3\">\r\n                  <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                  <input type=\"password\" className=\"form-control form-group\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  />\r\n               </div>\r\n               <div className=\"mb-3\">\r\n                  <label htmlFor=\"password\" className=\"form-label\">Confirm Password</label>\r\n                  <input type=\"password\" className=\"form-control form-group\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  />\r\n               </div>\r\n               <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n               <p className=\"register grey-text text-darken-1\">\r\n                  Already have an account? <a href=\"/signin\">Sign In</a>\r\n               </p>\r\n            </form>\r\n            </div>\r\n               \r\n          {/* sales texts */}\r\n      </div>\r\n      <Footer />\r\n      </>\r\n   )\r\n}\r\n}\r\n\r\nexport default Signup;","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\GetMealData\\index.js",["143","144"],"import React, { useState } from \"react\";\r\nimport MealList from \"../MealList\";\r\nimport axios from 'axios';\r\nimport \"./style.css\";\r\nimport Navbar from \"../Nav2\";\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nexport default function GetMeal({ preferences }) {\r\n    const [mealData, setMealData] = useState(null);\r\n    const [calories, setCalories] = useState('');\r\n    const [prefs, setPrefs] = useState(\"\");\r\n    const [cals, setCals] = useState('');\r\n\r\n\r\n    function handleChange(e) {\r\n        setCalories(e.target.value)\r\n\r\n    }\r\n\r\n    function useCpd() {\r\n        const decodedToken = localStorage.getItem('decodedTokenID')\r\n        let userId = decodedToken;\r\n        axios.get(`/api/data/${userId}`)\r\n            .then(res => {\r\n                const userData = res.data.slice();\r\n                userData.sort(function (a, b) {\r\n                    var c = new Date(a.date);\r\n                    var d = new Date(b.date);\r\n                    return d - c;\r\n                })\r\n                setCals(\r\n                    userData[0].cpd.toString()\r\n                );\r\n                console.log(cals)\r\n            })\r\n            .catch((err) => { })\r\n    }\r\n\r\n    function includePref() {\r\n        const decodedToken = localStorage.getItem('decodedTokenID')\r\n        let userId = decodedToken;\r\n        axios.get(`/api/dataPref/${userId}`)\r\n            .then(res => {\r\n                const userData = res.data.slice();\r\n                userData.sort(function (a, b) {\r\n                    var c = new Date(a.date);\r\n                    var d = new Date(b.date);\r\n                    return d - c;\r\n                })\r\n                setPrefs(\r\n                    userData[0].preferences.toString()\r\n                );\r\n                console.log(userData[0].preferences)\r\n            })\r\n            .catch((err) => { })\r\n    }\r\n\r\n    function getMealData() {\r\n        fetch(\r\n            `https://api.spoonacular.com/mealplanner/generate?apiKey=799c454c6da54da4bab574ff67c13190&timeFrame=day&targetCalories=${calories}${cals}&diet=${preferences}`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setMealData(data);\r\n                console.log(data)\r\n                console.log(preferences)\r\n            })\r\n            .catch(() => {\r\n                console.log(\"error\");\r\n            })\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"getMeals-container\">\r\n            <Navbar />\r\n            <div className=\"getMeals\">\r\n                <section className=\"controls\">\r\n                    <input className=\"form-control\" type=\"number\" placeholder=\"Calories (e.g. 2000)\" onChange={handleChange} />\r\n                    <br />\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" name=\"checked\" id=\"flexCheckDefault\" onChange={useCpd} />\r\n                    <label className=\"form-check-label\"> Use My Suggested Calories  </label>\r\n                    <br />\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" name=\"checked\" id=\"flexCheckDefault\" onChange={includePref} />\r\n                    <label className=\"form-check-label\"> Use My Saved Dietary Preferences </label>\r\n\r\n                    <p><small><strong>Note: </strong>Please enter your target calories for the day, or check the box to use your suggested calories that we have calculated with the latest information you have entered,\r\n              <br /> Please ensure one of these options are completed to provide you the best experience from our team!\r\n               </small></p>\r\n                    <br />\r\n                    <button id=\"filterBtn\" className=\"btn btn-default filter-button\" data-filter=\"irrigation\" onClick={getMealData}>Get Daily Meal Plan</button>\r\n\r\n                </section>\r\n                {mealData && <MealList mealData={mealData} calories={calories} />}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\DietPref\\index.js",["145"],"\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport GetMeal from '../GetMealData';\r\nimport \"./style.css\";\r\nimport Navbar from '../Nav2';\r\n\r\nexport default class DietPref extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      preferences: {\r\n        Vegan: false,\r\n        GlutenFree: false,\r\n        Ketogenic: false,\r\n        Paleo: false,\r\n        Primal: false,\r\n        Whole30: false,\r\n        Vegetarian: false,\r\n        LactoVegetarian: false,\r\n        OvoVegetarian: false,\r\n        Pescetarian: false,\r\n      },\r\n      save: {\r\n        clicked: false\r\n      }\r\n    };\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    const { name, checked } = event.target;\r\n\r\n    this.setState((prevState) => {\r\n      const preferences = prevState.preferences;\r\n      preferences[name] = checked;\r\n      return preferences;\r\n\r\n    });\r\n\r\n  };\r\n\r\n  handleSave = (event) => {\r\n    const {name, checked } = event.target;\r\n\r\n    this.setState((prevState) => {\r\n      let save = prevState.save;\r\n      save[name] = checked;\r\n      return save;\r\n\r\n    });\r\n    \r\n  };\r\n  savePreferences (preferences) {\r\n    if(this.state.save.clicked === true) {\r\n      const decodedToken = localStorage.getItem('decodedTokenID');\r\n      const userId = decodedToken;\r\n      console.log(\"TOKEN DECODED\", decodedToken)\r\n    const newPref = {\r\n      userId: decodedToken,\r\n      preferences: preferences };\r\n    console.log(newPref);\r\n    axios.post('/api/dataPref', newPref)\r\n    .then(res => console.log(res))\r\n    .then(alert(\"Your preferences have been saved! you may continue\"))\r\n  } \r\n}\r\n\r\n\r\n\r\n  render() {\r\n    const preferences = Object.keys(this.state.preferences)\r\n      .filter((key) => this.state.preferences[key])\r\n      .join(\", \");\r\n\r\n    return (\r\n      <div className=\"form-check\">\r\n        <Navbar />\r\n        <header className=\"header\">\r\n          <h1>Choose Diet Preferences</h1>\r\n          <small>\r\n         *descriptions provided by Spoonacular.</small>\r\n        </header>\r\n\r\n        <main>\r\n          <div>\r\n            <label>Check all that apply</label>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.vegan} onChange={this.handleClick} type=\"checkbox\" name=\"Vegan\" />\r\n              <label className=\"form-check-label\">Vegan</label>\r\n                  No ingredients may contain meat or meat by-products, such as bones or gelatin, nor may they contain eggs, dairy, or honey.\r\n                </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.glutenfree} onChange={this.handleClick} type=\"checkbox\" name=\"GlutenFree\" />\r\n              <label className=\"form-check-label\">Gluten Free</label>\r\n                  Eliminating gluten means avoiding wheat, barley, rye, and other gluten-containing grains and foods made from them (or that may have been cross contaminated).\r\n                </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.ketogenic} onChange={this.handleClick} type=\"checkbox\" name=\"Ketogenic\" />\r\n              <label className=\"form-check-label\">Ketogenic</label>\r\n                  The keto diet is based more on the ratio of fat, protein, and carbs in the diet rather than specific ingredients. Generally speaking, high fat, protein-rich foods are acceptable and high carbohydrate foods are not\r\n                </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.primal} onChange={this.handleClick} type=\"checkbox\" name=\"Primal\" />\r\n              <label className=\"form-check-label\">Primal</label>\r\n              <p> Very similar to Paleo, except dairy is allowed - think raw and full fat milk, butter, ghee, etc.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.paleo} onChange={this.handleClick} type=\"checkbox\" name=\"Paleo\" />\r\n              <label className=\"form-check-label\">Paleo</label>\r\n              <p>Allowed ingredients include meat (especially grass fed), fish, eggs, vegetables, some oils (e.g. coconut and olive oil), and in smaller quantities, fruit, nuts, and sweet potatoes. We also allow honey and maple syrup\r\n                  (popular in Paleo desserts, but strict Paleo followers may disagree). Ingredients not allowed include legumes (e.g. beans and lentils), grains, dairy, refined sugar, and processed foods.</p>\r\n            </div>\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.whole30} onChange={this.handleClick} type=\"checkbox\" name=\"Whole30\" />\r\n              <label className=\"form-check-label\">Whole30</label>\r\n              <p> Allowed ingredients include meat, fish/seafood, eggs, vegetables, fresh fruit, coconut oil, olive oil, small amounts of dried fruit and nuts/seeds. Ingredients not allowed include added sweeteners\r\n                  (natural and artificial, except small amounts of fruit juice), dairy (except clarified butter or ghee), alcohol, grains, legumes (except green beans, sugar snap peas, and snow peas), and food additives, such as carrageenan, MSG, and sulfites.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.vegetarian} onChange={this.handleClick} type=\"checkbox\" name=\"Vegetarian\" />\r\n              <label className=\"form-check-label\">Vegetarian</label>\r\n              <p> No ingredients may contain meat or meat by-products, such as bones or gelatin.</p>\r\n            </div>\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.lactoVegetarian} onChange={this.handleClick} type=\"checkbox\" name=\"LactoVegetarian\" />\r\n              <label className=\"form-check-label\">Lacto-Vegetarian</label>\r\n              <p> All ingredients must be vegetarian and none of the ingredients can be or contain egg.</p>\r\n            </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.ovoVegetarian} onChange={this.handleClick} type=\"checkbox\" name=\"OvoVegetarian\" />\r\n              <label className=\"form-check-label\">Ovo-Vegetarian</label>\r\n              <p> All ingredients must be vegetarian and none of the ingredients can be or contain dairy. </p>\r\n            </div>\r\n\r\n            <div>\r\n              <input className=\"form-check-input\" checked={this.state.preferences.pescetarian} onChange={this.handleClick} type=\"checkbox\" name=\"Pescetarian\" />\r\n              <label className=\"form-check-label\">Pescetarian</label>\r\n              <p> Everything is allowed except meat and meat by-products - some pescetarians eat eggs and dairy, some do not. </p>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <p> Your selected preferences are: {preferences}</p>\r\n          <p>Please verify your preferences are correct, then scroll down to get your daily meal plan!\r\n               </p>\r\n               <input className=\"form-check-input\" checked={this.state.save.clicked} onChange={this.handleSave} onClick={this.savePreferences(preferences)} type=\"checkbox\" name=\"clicked\" />\r\n               <label className=\"form-check-label\">Save</label>\r\n          <br />\r\n\r\n          <Link to={\"/Meal\"}>Only if you have NO diet preferences you may click <strong>here</strong> to continue </Link>\r\n\r\n\r\n          {preferences && <GetMeal preferences={preferences} />}\r\n        </main>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Profile\\index.js",["146"],"import react, { Component } from 'react';\r\nimport './style.css';\r\nimport Modal from '../Modal';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          show: false,\r\n          name: this.userID\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n    }\r\n\r\n  showModal = () => {\r\n    this.setState({ show: true });\r\n    \r\n    const userID = JSON.parse(localStorage.getItem('decodedToken'));\r\n    console.log(userID.name);\r\n    axios.get('/api/getInfo', userID)\r\n        .then( res => {\r\n            console.log(res);\r\n        })\r\n\r\n  }\r\n\r\n  hideModal = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n   render() {\r\n    return(\r\n        <div className=\"profile\">\r\n           <main>\r\n                <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                <div className=\"account\">\r\n                    <h3 className=\"display-4 heading\">Account Info</h3>\r\n                    <div className=\"form\">\r\n                        <div className=\"card\">\r\n                            <h3>Name: {this.state.name} </h3>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3>Email: </h3>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3>Height: </h3>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3>Weight: </h3>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3>BMI: </h3>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3>Allegies: </h3>\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <h3>Nutrition Type:  </h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Modal>\r\n                <div onClick={this.getInfo}>\r\n                <Link to=\"#\" onClick={this.showModal}> Profile</Link>\r\n                </div>\r\n                {/* <h5  onClick={this.showModal} >Profile</h5> */}\r\n                {/* <button type=\"text\" onClick={this.showModal}>\r\n                    Profile\r\n                </button> */}\r\n            </main>\r\n        </div>\r\n        )\r\n   }\r\n}\r\n\r\nexport default Profile;","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\BMI\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Signin\\index.js",["147","148"],"import React, { Component} from 'react';\r\nimport './style.css';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Nav from './../Nav';\r\nimport Footer from '../Footer';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass Signin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      isAuthenticated: false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userInfo = localStorage.getItem(\"decodedTokenID\");\r\n        if(userInfo) {\r\n            // if token exist, redirect to dashboard\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n            console.log(userInfo);\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n  const userInfo = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n      axios.post('/api/login', userInfo)\r\n      .then(res => {\r\n        console.log(res);\r\n        const { token } = res.data;\r\n        \r\n        localStorage.setItem('jwtToken', token);\r\n        const decodedToken = jwt_decode(token);\r\n        localStorage.setItem('decodedTokenID', (decodedToken.id))\r\n        console.log(decodedToken.id);\r\n        this.setState({isAuthenticated: true});\r\n        console.log(this.state.isAuthenticated);\r\n        \r\n        \r\n      })\r\n      .then(res => this.props.history.push('/dashboard'))\r\n      .catch(err => {\r\n       console.log(err);\r\n      })\r\n  };\r\n\r\n    render() {\r\n      const { errors } = this.state;\r\n      return (\r\n        <>\r\n         <Nav />\r\n        <div className=\"main\">\r\n            <div className=\"pillar\">\r\n              <h1 className=\"lead brand\">\r\n                  Nutri<span className = \"highlight\">Vice</span>\r\n              </h1>\r\n              <div className = \"quote\">\r\n                <div className=\"display-4 quotes\">\r\n                  {/* <h3 className=\"quotes\"> Famous quote</h3> */}\r\n                  <h4 className=\"quotes\"> “Healthy eating is a way of life, so it’s important to establish routines that are simple, realistically, and ultimately livable.”</h4>\r\n                  <h6 className=\"quotes\">– Horace</h6>\r\n                </div>\r\n              </div>\r\n                 \r\n              {/* user signin form */}\r\n              <form className=\"signin\" noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"mb-3\r\n              \">\r\n                 <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                 <input type=\"email\" className=\"form-control\" aria-describedby=\"emailhelp\" \r\n                 onChange={this.onChange}\r\n                 value={this.state.email}\r\n                 error={errors.email}\r\n                 id=\"email\"\r\n                 type=\"email\"\r\n                 />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                 <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                 <input type=\"password\" className=\"form-control\" aria-describedby=\"emailhelp\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                 />\r\n              </div>\r\n              <button type=\"submit\"  className=\"btn btn-primary\">Signin</button>\r\n              <p className=\"register grey-text text-darken-1\">\r\n                Don't have an account? <a href=\"/signup\">Register</a>\r\n              </p>\r\n            </form>\r\n            {/* sales texts */}\r\n            </div>\r\n             <div>\r\n            \r\n             </div>\r\n  \r\n        </div>\r\n        <Footer />\r\n        </>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Signin;","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\SeeData\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Chart\\index.js",["149","150"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\r\n                datasets: [\r\n                    {   label: \"Week One\",\r\n                        data: [],\r\n                        borderColor: ['#2d6a4f'],\r\n                        backgroundColor: ['#52B788'],\r\n                        pointBackgroundColor: '#D8F3dC',\r\n                        pointBorderColor: '#081c15'\r\n                    },\r\n                    {\r\n                        label: 'Week Two',\r\n                        data: [155, 158, 163, 168, 165, 168, 170],\r\n                        borderColor: ['#2d6a4f'],\r\n                        backgroundColor: ['#52B788'],\r\n                        pointBackgroundColor: '#D8F3dC',\r\n                        pointBorderColor: '#081c15'\r\n                     },\r\n                ]\r\n            }\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/api/data')\r\n        .then(res => {\r\n            \r\n            this.setState(prevState => {\r\n                let data = Object.assign({}, prevState.data);\r\n                data.labels = res.data.date;\r\n                data.dataSets.data = res.data.dataSets.data;\r\n                return { data };\r\n            })\r\n\r\n        }).catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        this.setState({value: event.target.value});\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    getChartData = canvas => {\r\n        const data = this.state.data;\r\n        return data\r\n    }\r\n\r\n     addData(chart) {\r\n        chart.data.labels.push(this.state.label);\r\n        chart.data.datasets.forEach((dataset) => {\r\n            dataset.data.push(this.state.data);\r\n        });\r\n        chart.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div style={{ position: \"relative\" }}>\r\n                <h3>Progress</h3>\r\n            \r\n                <form>\r\n                <input  className=\"form-control\" value={this.state.data.datasets.data} placeholder=\"Weight\" />\r\n                <input  className=\"form-control\" value={this.state.labels} placeholder=\"Day\" />\r\n               \r\n                </form>\r\n                <Line\r\n                    options={{\r\n                        title:{\r\n                            display: true,\r\n                            text: 'Progress'\r\n                        },\r\n                        scales: {\r\n                            yAxes:[\r\n                                {\r\n                                    ticks: {\r\n                                        min: 0,\r\n                                        stepsize: 10,\r\n                                        callback: function(value, index, values) {\r\n                                            return value + ' lbs'\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n                        },\r\n\r\n                        responsive: true,\r\n\r\n\r\n                    }}\r\n                    data={this.getChartData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default function Chart() {\r\n//     const [chartData, getChartData] = useState({});\r\n//     const [userWeight, getUserWeight] = useState([]);\r\n//     const [currentDay, getCurrentDay] = useState([]);\r\n//     let data = [];\r\n//     let options = [];\r\n\r\n//     useEffect(() =>{\r\n//         document.title = {Progress}\r\n//     })\r\n\r\n//     const Progress = async () => {\r\n//         axios.get('/api/data')\r\n//             .then(res => {\r\n//                 console.log(res)\r\n//                 const userData = res.slice();\r\n//                 userData.sort(function (a, b) {\r\n//                     var c = new Date(a.date);\r\n//                     var d = new Date(b.date);\r\n//                     return d - c;\r\n//                 })\r\n//                 const userLatest =\r\n//                 {\r\n//                     weight: userData[0].weight,\r\n//                     date: userData[0].date\r\n//        }\r\n//                 console.log(userLatest, \"GET DATA\")\r\n//                 console.log(userData)\r\n\r\n//                 data = {\r\n//                     labels: userData.date,\r\n//                     datasets: [\r\n//                         {\r\n//                             label: 'Week One',\r\n//                             data: userData.weight,\r\n//                             borderColor: '#2d6a4f',\r\n//                             backgroundColor: '#52B788',\r\n//                             pointBackgroundColor: '#D8F3dC',\r\n//                             pointBorderColor: '#081c15'\r\n//                         }\r\n//                         //  {\r\n//                         //     label: 'Week Two',\r\n//                         //     data: [155, 158, 163, 168, 165, 168, 170],\r\n//                         //     borderColor: ['#2d6a4f'],\r\n//                         //     backgroundColor: ['#52B788'],\r\n//                         //     pointBackgroundColor: '#D8F3dC',\r\n//                         //     pointBorderColor: '#081c15'\r\n//                         //  },\r\n\r\n//                     ]\r\n//                 }\r\n\r\n//                 options = {\r\n//                     title: {\r\n//                         display: true,\r\n//                         text: 'Progress'\r\n//                     },\r\n//                     scales: {\r\n//                         yAxes: [\r\n//                             {\r\n//                                 ticks: {\r\n//                                     min: 0,\r\n//                                     stepsize: 10,\r\n//                                     callback: function (value, index, values) {\r\n//                                         return value + ' lbs'\r\n//                                     }\r\n//                                 }\r\n//                             }\r\n//                         ]\r\n//                     }\r\n//                 }\r\n\r\n//             }\r\n//             )\r\n//     }\r\n//     return (\r\n//         <Line data={data} options={options} />\r\n//     )\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\SeePref\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Footer\\index.js",["151","152"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className = \"footer\">\r\n            <div className = \"footer-logo-container\">\r\n                <Link to = \"/\" className = \"footer-logo\">\r\n                    <i className=\"fas fa-heartbeat\"></i> Nutri<span className = \"highlight\">Vice</span>\r\n                </Link>\r\n            </div>\r\n            <div className = \"copywrite-containter\">\r\n                <p className = \"copywrite\"> &copy;  2021 DT SF ND LS </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Jumbotron\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\CardItem\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Nav\\index.js",["153"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button } from \"../Button\"\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 680 || click) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        showButton()\r\n    }, [])\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className = \"navbar\">\r\n                <div className = \"navbar-container\">\r\n                    <Link to = \"/\" className = \"navbar-logo\" onClick = {closeMobileMenu}>\r\n                        <i className=\"fas fa-heartbeat\"></i> Nutri<span className = \"highlight\">Vice</span>\r\n                    </Link>\r\n                    <div className = \"menu-icon\" onClick = {handleClick}>\r\n                        <i className = {click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n                    </div>\r\n                    <ul className = {click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/discover\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                Discover\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/dashboard\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/about\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/Signup\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                Sign Up\r\n                            </Link>\r\n                        </li>\r\n                        {click &&\r\n                        <li className = \"nav-item\">\r\n                            <Button buttonStyle = \"btn--outline\" to = \"signin\" onClick = {closeMobileMenu}>SIGN IN</Button>\r\n                        </li>}\r\n                    </ul>\r\n                    {button && <Button buttonStyle = \"btn--outline\" to = \"signin\">SIGN IN</Button>}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Cards\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Featured\\index.js",["154"],"import React from \"react\";\r\nimport './style.css';\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nexport default class Featured extends React.Component {\r\n    state = {\r\n        meals: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\r\n            `https://api.spoonacular.com/recipes/random?apiKey=799c454c6da54da4bab574ff67c13190&number=6`\r\n        )\r\n            .then((respone) => respone.json())\r\n            .then((data) => {\r\n                this.setState({ meals: data.recipes });\r\n            })\r\n            .catch(() => {\r\n                console.log(\"error\");\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <div className=\"display-4 head\">Featured Meals</div>\r\n                        <div className=\"gid1\">\r\n                        {this.state.meals.map(meals => {\r\n                            return (\r\n                                     <div className=\"card d-flex align-items-start flex-column meal\">\r\n                                     <img alt=\"recipe\" className=\"card-img-top\" src={meals.image}></img>\r\n                                     <div className=\"card-body\" >\r\n                                        <h1 className=\"card-title\">{meals.title}</h1>\r\n                                        <p className=\"card-text\"> Serving Size: {meals.servings} <br />\r\n                                            Health Score: {meals.healthScore} <br />\r\n                                            Preperation Time: {meals.readyInMinutes}\r\n                                        </p>\r\n                                        <a id=\"filterBtnTwo\" className=\"btn btn-default filter-button card-bottom goto\" href={meals.sourceUrl}>\r\n                                            Go to recipe\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n\r\n}","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\About\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Nav2\\index.js",["155","156","157"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button } from \"../Button\"\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 680 || click) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        showButton()\r\n    }, [])\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className = \"navbar\">\r\n                <div className = \"navbar-container\">\r\n                    <Link to = \"/\" className = \"navbar-logo\" onClick = {closeMobileMenu}>\r\n                        <i className=\"fas fa-heartbeat\"></i> Nutri<span className = \"highlight\">Vice</span>\r\n                    </Link>\r\n                    <div className = \"menu-icon\" onClick = {handleClick}>\r\n                        <i className = {click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n                    </div>\r\n                    <ul className = {click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/discover\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                Discover\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/dashboard\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/about\" className = \"nav-links tile\" onClick = {closeMobileMenu}>\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Dashboard\\index.js",["158"],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\MealList\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Modal\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Button\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\lastUpdated\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\lastUpdPref\\index.js",[],"C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\Meal\\index.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nexport default function Meal({ meal }) {\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            `https://api.spoonacular.com/recipes/${meal.id}/information?apiKey=799c454c6da54da4bab574ff67c13190&includeNutrition=false`\r\n        )\r\n            .then((respone) => respone.json())\r\n            .then((data) => {\r\n                setImageUrl(data.image);\r\n                console.log(data);\r\n            })\r\n            .catch(() => {\r\n                console.log(\"error\");\r\n            })\r\n    }, [meal.id])\r\n\r\n\r\n    return (\r\n        <>\r\n            <article>\r\n\r\n                <div className=\"gallery_product col-lg-4 col-md-4 col-sm-4 col-xs-6 filter hdpe\">\r\n                    <div className=\"card\">\r\n                        <h1 className=\"card-title\">{meal.title}</h1>\r\n\r\n                        <img src={imageUrl} alt=\"recipe\" className=\"card-img-top\" />\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">\r\n                                Preperation time: {meal.readyInMinutes} minutes <br />\r\n                    Number of servings: {meal.servings} <br />\r\n                            </p>\r\n\r\n\r\n\r\n                        </div>\r\n                        <a id=\"filterBtnTwo\" className=\"btn btn-default filter-button card-bottom\" href={meal.sourceUrl}>Go to recipe</a>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n\r\n        </>\r\n\r\n    )\r\n}","C:\\Users\\terdl\\gitlab\\Nutrivice-React-App\\client\\src\\components\\RandomMeals\\index.js",["160"],"import React from \"react\";\r\nimport './style.css';\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nexport default class RndmMeal extends React.Component {\r\n    state = {\r\n        meals: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\r\n           `https://api.spoonacular.com/recipes/random?apiKey=799c454c6da54da4bab574ff67c13190&number=6`\r\n        )\r\n            .then((respone) => respone.json())\r\n            .then((data) => {\r\n                this.setState({ meals: data.recipes });\r\n            })\r\n            .catch(() => {\r\n                console.log(\"error\");\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                        <div className=\"display-4\">Featured Meals</div>\r\n                        <div className=\"gid\">\r\n                        {this.state.meals.map(meals => {\r\n                            return (\r\n                                     <div className=\"card meal\">\r\n                                     <img alt=\"recipe\" className=\"card-img-top\" src={meals.image}></img>\r\n                                     <div className=\"card-body\" >\r\n                                        <h1 className=\"card-title\">{meals.title}</h1>\r\n                                        <p className=\"card-text\"> Serving Size: {meals.servings} <br />\r\n                                            Health Score: {meals.healthScore} <br />\r\n                                            Preperation Time: {meals.readyInMinutes}\r\n                                        </p>\r\n                                        <a id=\"filterBtnTwo\" className=\"btn btn-default filter-button card-bottom\" href={meals.sourceUrl}>\r\n                                            Go to recipe\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n\r\n}",{"ruleId":"161","severity":1,"message":"162","line":84,"column":22,"nodeType":"163","endLine":84,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":94,"column":19,"nodeType":"163","endLine":94,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":104,"column":19,"nodeType":"163","endLine":104,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":114,"column":19,"nodeType":"163","endLine":114,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":124,"column":19,"nodeType":"163","endLine":124,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":6,"column":7,"nodeType":"166","messageId":"167","endLine":6,"endColumn":13},{"ruleId":"164","severity":1,"message":"168","line":12,"column":12,"nodeType":"166","messageId":"167","endLine":12,"endColumn":17},{"ruleId":"164","severity":1,"message":"169","line":57,"column":13,"nodeType":"166","messageId":"167","endLine":57,"endColumn":19},{"ruleId":"164","severity":1,"message":"170","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":90,"column":18,"nodeType":"163","endLine":90,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":100,"column":19,"nodeType":"163","endLine":100,"endColumn":34},{"ruleId":"164","severity":1,"message":"171","line":1,"column":28,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"172","line":1,"column":38,"nodeType":"166","messageId":"167","endLine":1,"endColumn":47},{"ruleId":"164","severity":1,"message":"173","line":2,"column":27,"nodeType":"166","messageId":"167","endLine":2,"endColumn":33},{"ruleId":"164","severity":1,"message":"174","line":2,"column":35,"nodeType":"166","messageId":"167","endLine":2,"endColumn":40},{"ruleId":"175","severity":1,"message":"176","line":24,"column":8,"nodeType":"177","endLine":24,"endColumn":10,"suggestions":"178"},{"ruleId":"164","severity":1,"message":"165","line":3,"column":7,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"179","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":16},{"ruleId":"164","severity":1,"message":"180","line":10,"column":12,"nodeType":"166","messageId":"167","endLine":10,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":24,"column":8,"nodeType":"177","endLine":24,"endColumn":10,"suggestions":"181"},{"ruleId":"164","severity":1,"message":"182","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":2,"column":7,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"165","line":3,"column":7,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'apiKey' is assigned a value but never used.","Identifier","unusedVar","'prefs' is assigned a value but never used.","'userId' is assigned a value but never used.","'react' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'showButton'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'Button' is defined but never used.","'button' is assigned a value but never used.",["184"],"'FiHome' is defined but never used.",{"desc":"185","fix":"186"},{"desc":"185","fix":"187"},"Update the dependencies array to be: [showButton]",{"range":"188","text":"189"},{"range":"190","text":"189"},[629,631],"[showButton]",[629,631]]